SciteQt is a port of the SciTE editor to the Qt QML/Quick platform, 
which is optimized for touch devices.

All target platforms of the Qt framework are supported (Android, IOS, 
Webassembly, Windows, Mac and Linux). The application runs even in 
a browser via Webassembly (http://mneuroth.de/sciteqt.html)

The current homepage of the project can be found on github: 

  https://github.com/mneuroth/SciTEQt

SciteQt ist still under development, therefore it has most probably 
some bugs and not all the features of the SciTE editor are implemented 
yet.

Missing features are:

  * Detect monitor change/removement and move position if needed
  * History for find/replace items in strip find --> use combo boxes ?
  * Extension: History for find in files items persistent machen ?
  * Support list of last opened files
  * switch to Scite v4.4.5
  * Improve splitter handling
  * Printing (partly)
  * ((Webassembly: after closing dialog (FileDialog) app needs mouse click to update view
  * Webassembly: processing of modal dialogs (FileDialog, MessageBox)
  * Webassembly: click on Buttons (i. e. Cancel) in Dialogs creates crash ! BUT: setting focus via Keyboard and return on button works sometimes !!!???
  * ((Android: focus lost problem after closing dialog, need to touch on tabbar
  * Android: improve selection of text
  * Android: improve Menu/Toolbar layout
  * Android: implement file access
  * Android: implement sharing
  * Android: improve deployment
  * Android: after new document the input focus is lost
  * Android: does Qt FileDialog interfere with MobileFileDialog ? --> Qt FileDialog does not run good with MobileFileDialog enabled
  * Android: add grantAccess to FileSystem for StorageAccess
  * Android: add new document --> focus lost
  * github ci: windows build is green, but compile step was failing !!!???

Now already implemented:

  * Support multiple languages via resources
  * Support Drag&Drop (desktop)
  * Context menus (partly, missing: context menu for tab page)
  * TabSize dialog
  * Abbreviation dialog
  * Parameters dialog
  * Parameters open --> is parameters dialog open
  * Parameter grab --> get data from parameters dialog
  * Find in Files dialog
  * Double click in output navigates to file (Find in files)
  * Support navigate in find in files dialog
  * Execute external Scripts (build, go, stop, etc.)
  * Find/Replace extended dialogs --> find.use.strip=0 / replace.use.strip=1 / find.replace.advanced=1

//TODO: use: command.go.*.py=*$(python.command) -u "$(FileNameExt)"  $(1)
TODO: Accelerator Key funktioniert, obwohl Action disabled ist !!!???

