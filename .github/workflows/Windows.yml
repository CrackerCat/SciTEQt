name: Windows CI

on:
  push:
    branches: [ master ]
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches: [ master ]

jobs:

  windows_gcc_build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1
    - uses: jurplel/install-qt-action@v2
      with:
        # Directory to install Qt
        dir: # optional
        # Version of Qt to install
        version: '5.14.2'
        # Host platform
        host: # optional
        # Target platform for build
        target: 'desktop'
        # Architecture for Windows/Android
        arch: 'win64_mingw73'
        # Whether or not to install Qt dependencies on Linux
        install-deps: 'true'
        # Additional Qt modules to install
        modules: 'qtscript qtscripttools'
        # Force a Qt mirror in case the default is not working
        mirror: # optional
        # Whether or not to actually download Qt
        cached: # optional, default is false
        # Version of aqtinstall to use in case of issues
        aqtversion: # optional, default is ==0.8
        # Version of py7zr to use in case of issues
        py7zrversion: # optional, default is ==0.6
        # Any extra arguments to append to the back
        extra: # optional
    - name: Install Qt and compile
      run: |
        d:
        dir 
        python -m aqt tool -O d:\a\SciTEQt/Qt windows tools_ifw 3.2.2 win-x86
        gcc -v
        qmake -r sciteqt.pro
        dir
        mingw32-make
        dir
        dir scite\bin
        dir scite\qt
        dir scite\qt\release
        dir scintilla\bin
        cd scite\qt\dist\packages\org.scintilla.sciteqt\data
        windeployqt --release --qmldir ..\..\..\.. sciteqt.exe
        dir
        cd ..\..\..
        dir
        d:\a\SciTEQt\Qt\Tools\QtInstallerFramework\3.2\bin\binarycreator --offline-only -c config\config.xml -p packages SciTEQtInstallerMingw.exe
        dir 
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: scite/qt/dist/SciTEQtInstallerMingw.exe
        asset_name: SciTEQtInstallerMingw.exe
        asset_content_type: application/exe

  windows_msc_build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1
    - uses: ilammy/msvc-dev-cmd@v1.0.0
    - uses: jurplel/install-qt-action@v2
      with:
        # Directory to install Qt
        dir: # optional
        # Version of Qt to install
        version: '5.14.2'
        # Host platform
        host: # optional
        # Target platform for build
        target: 'desktop'
        # Architecture for Windows/Android
        arch: 'win64_msvc2017_64'
        # Whether or not to install Qt dependencies on Linux
        install-deps: 'true'
        # Additional Qt modules to install
        modules: 'qtscript qtscripttools'
        # Force a Qt mirror in case the default is not working
        mirror: # optional
        # Whether or not to actually download Qt
        cached: # optional, default is false
        # Version of aqtinstall to use in case of issues
        aqtversion: # optional, default is ==0.8
        # Version of py7zr to use in case of issues
        py7zrversion: # optional, default is ==0.6
        # Any extra arguments to append to the back
        extra: # optional
    - name: Install Qt and compile
      run: |
        cd 
        dir
        d:
        dir 
        python -m aqt tool -O d:\a\SciteQt/Qt windows tools_ifw 3.2.2 win-x86
        dir d:\a\SciteQt\Qt\Tools
        cl
        where qmake
        qmake -r sciteqt.pro
        dir
        nmake
        dir
        dir scite
        dir scite\qt
        dir scite\qt\release
        dir scite\bin
        dir scintilla\bin
        cd scite\qt\dist\packages\org.scintilla.sciteqt\data
        windeployqt --release --qmldir ..\..\..\.. sciteqt.exe
        dir
        cd ..\..\..
        dir
        d:\a\SciTEQt\Qt\Tools\QtInstallerFramework\3.2\bin\binarycreator --offline-only -c config\config.xml -p packages SciTEQtInstallerMsc.exe
        dir 
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: scite/qt/dist/SciTEQtInstallerMsc.exe
        asset_name: SciTEQtInstallerMsc.exe
        asset_content_type: application/exe
